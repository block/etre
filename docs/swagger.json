{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/entities/:type": {
            "get": {
                "description": "Query entities of a type specified by the :type endpoint.\nReturns a set of entities matching the labels in the `query` query parameter.\nAll labels of each entity are returned, unless specific labels are specified in the `labels` query parameter.\nThe result set is reduced to distinct values if the request includes the `distinct` query parameter (requires `lables` name a single label).\nIf the query is longer than 2000 characters, use the POST /query endpoint (to be implemented).",
                "produces": [
                    "application/json"
                ],
                "summary": "Query a set of entities",
                "operationId": "getEntitiesHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selector",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of labels to return",
                        "name": "labels",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Reduce results to one per distinct value",
                        "name": "distinct",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/etre.Entity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/etre.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/etre.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "etre.Entity": {
            "type": "object",
            "additionalProperties": true
        },
        "etre.Error": {
            "type": "object",
            "properties": {
                "entityId": {
                    "description": "entity ID that caused error, if any",
                    "type": "string"
                },
                "httpStatus": {
                    "description": "HTTP status code",
                    "type": "integer"
                },
                "message": {
                    "description": "human-readable and loggable error message",
                    "type": "string"
                },
                "type": {
                    "description": "error slug (e.g. db-error, missing-param, etc.)",
                    "type": "string"
                }
            }
        }
    }
}
